package(default_visibility = ["//visibility:public"])
exports_files(["tsconfig.json"])

# NOTE: this will move to node_modules/BUILD in a later release
filegroup(name = "node_modules", srcs = glob([
    "node_modules/**/*.js",
    "node_modules/**/*.d.ts",
    "node_modules/**/*.json",
    "node_modules/rollup/bin/rollup",
]))

load("@build_bazel_rules_nodejs//internal:devmode_js_sources.bzl", "devmode_js_sources")
devmode_js_sources(
    name = "devsources",
    deps = ["//src:app"],
)

load("@build_bazel_rules_nodejs//:defs.bzl", "nodejs_binary")
nodejs_binary(
    name = "rollup_bin",
    entry_point = "rollup/bin/rollup",
    node_modules = ":node_modules",
    # Tests that templated_args works
    # NB: Space before the / is needed to prevent shell on Windows from
    # converting this argument to a path under C:\
    templated_args = ["--intro", "' /*Generated by Bazel*/'"],
)

load(":rollup.bzl", "rollup_bundle")
rollup_bundle(
    name = "rollup",
    srcs = [":devsources"],
    # should use entry_point = "$(location //src:index.js)",
    entry_point = "bazel-out/local-fastbuild/bin/src/index.js",
)

load("@build_bazel_rules_nodejs//:defs.bzl", "nodejs_binary")

nodejs_binary(
    name = "devserver",
    entry_point = "__main__/devserver.js",
    data = [
        ":index.bazel.html",
        ":devserver.js",
        #":devsources",
        # Seems like this should be included in the files[] in the :devsources
        #":devsources.MF",
        ":rollup.js",
    ],
    # Tell ibazel not to re-start the server under 'ibazel run'
    # It should just re-build the data[]
    tags = ["IBAZEL_MAGIC_TAG"],
)
